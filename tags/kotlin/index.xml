<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>kotlin on すいはんぶろぐ.io</title><link>https://suihan74.github.io/tags/kotlin/</link><description>Recent content in kotlin on すいはんぶろぐ.io</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Sat, 27 Mar 2021 22:44:28 +0900</lastBuildDate><atom:link href="https://suihan74.github.io/tags/kotlin/index.xml" rel="self" type="application/rss+xml"/><item><title>enum値に設定されたアノテーションを取得する方法</title><link>https://suihan74.github.io/posts/2021/03_27_00_get_annotations_of_enum_values/</link><pubDate>Sat, 27 Mar 2021 22:44:28 +0900</pubDate><guid>https://suihan74.github.io/posts/2021/03_27_00_get_annotations_of_enum_values/</guid><description>ある列挙型の値に設定されたアノテーションを取得する方法。 個人的には滅多に使わないけど、必要な時に忘れるのでメモ。 val anno = HogeEnum.VALUE .declaringClass .getField(HogeEnum.VALUE.name) .getAnnotation(TestAnno::class.java) annotation class TestAnno enum class HogeEnum {</description></item><item><title>startActivityForResult()を新APIに置き換える</title><link>https://suihan74.github.io/posts/2021/02_25_00_relace_start_activity_for_result/</link><pubDate>Thu, 25 Feb 2021 14:11:51 +0900</pubDate><guid>https://suihan74.github.io/posts/2021/02_25_00_relace_start_activity_for_result/</guid><description>fragment-ktx androidx.fragment:fragment-ktxを1.2.5から1.3.0に更新した結果(というより、その内部で依存しているa</description></item><item><title>(いまさら)ViewPagerからViewPager2へ移行する</title><link>https://suihan74.github.io/posts/2021/02_23_00_migrate_to_view_pager_2/</link><pubDate>Tue, 23 Feb 2021 12:15:14 +0900</pubDate><guid>https://suihan74.github.io/posts/2021/02_23_00_migrate_to_view_pager_2/</guid><description>依存パッケージのアップデート androidx.fragment:fragment-ktxを1.2.5から1.3.0に更新した結果、Activ</description></item><item><title>メインプロセス以外でFirebaseサービスの使用を避ける</title><link>https://suihan74.github.io/posts/2021/02_13_00_restart_apps_with_firebase/</link><pubDate>Sat, 13 Feb 2021 14:37:58 +0900</pubDate><guid>https://suihan74.github.io/posts/2021/02_13_00_restart_apps_with_firebase/</guid><description>例) アプリの再起動 Android Q 以降を対象にしているアプリでは、アプリ再起動時にAlarmManagerを使った方法は使用できないため、 たとえば次のよ</description></item><item><title>Firebase CrashlyticsをAndroidアプリに導入する</title><link>https://suihan74.github.io/posts/2021/02_08_01_setup_firebase_crashlytics/</link><pubDate>Mon, 08 Feb 2021 14:59:48 +0900</pubDate><guid>https://suihan74.github.io/posts/2021/02_08_01_setup_firebase_crashlytics/</guid><description>Android Vitalsに肝心な時に全くクラッシュレポートが飛んでこないの何でやねんってなる &amp;mdash; すいはん (@suihan742) February 8, 2021 ということで Firebase Crashlytics を導入しようと公式ドキュ</description></item><item><title>古めのAndroidバージョンをサポートしたままJava 8+ APIを使う方法</title><link>https://suihan74.github.io/posts/2021/02_08_00_core_library_desugaring/</link><pubDate>Mon, 08 Feb 2021 00:30:00 +0900</pubDate><guid>https://suihan74.github.io/posts/2021/02_08_00_core_library_desugaring/</guid><description>AndroidのAPIレベルとJavaバージョン Androidの最小APIレベルを低めに設定している場合、そのままでは Java 8 言語機能を利用でき</description></item><item><title>アプリから端末をロックして消灯する方法</title><link>https://suihan74.github.io/posts/2021/01_21_00_lock_device_from_app/</link><pubDate>Thu, 21 Jan 2021 21:30:00 +0900</pubDate><guid>https://suihan74.github.io/posts/2021/01_21_00_lock_device_from_app/</guid><description>前提 現在、この記事で説明する端末管理機能を使用する以外の方法でアプリから直接端末をロックしスリープ状態にする方法は存在しないっぽい(カジュア</description></item><item><title>端末にインストールされているアプリ情報を取得する</title><link>https://suihan74.github.io/posts/2021/01_09_00_get_installed_applications_info/</link><pubDate>Sat, 09 Jan 2021 17:20:00 +0900</pubDate><guid>https://suihan74.github.io/posts/2021/01_09_00_get_installed_applications_info/</guid><description>型とか分かりやすくするために大体は関数で書いているが、あくまで紹介のためなので使うときは適当に変えるようにする。 インストール済みの全アプリ情</description></item><item><title>設定データをKotlin Serialization + DataStoreで扱う</title><link>https://suihan74.github.io/posts/2021/01_05_00_data_store_with_serialization/</link><pubDate>Tue, 05 Jan 2021 00:45:00 +0900</pubDate><guid>https://suihan74.github.io/posts/2021/01_05_00_data_store_with_serialization/</guid><description>この記事はDataStore 1.0.0-alpha05,Kotlin Serialization 1.0.1について書かれています。 (とくにDataStoreの方はアルファ版なので)アップデートにより最新バ</description></item><item><title>アイコン化可能なドロワーをでっち上げる</title><link>https://suihan74.github.io/posts/2021/01_04_00_iconify_drawer/</link><pubDate>Mon, 04 Jan 2021 17:42:49 +0900</pubDate><guid>https://suihan74.github.io/posts/2021/01_04_00_iconify_drawer/</guid><description>追記 (2021-01-26) メニュー開閉時に仮想キーボードを閉じるためのコードを追加 (該当位置は commit: 847804a を参照) なにこれ こんなの。 画面横幅の狭いスマホ用レイアウトでこ</description></item><item><title>ダイアログからダイアログを開く</title><link>https://suihan74.github.io/posts/2020/12_01_00_show_dialog_from_dialog/</link><pubDate>Tue, 01 Dec 2020 20:45:00 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/12_01_00_show_dialog_from_dialog/</guid><description>なんか同じようなこと度々やっては忘れている気がするので記録しておく。 DialogFragmentを開いて、その操作結果でさらに別のダイアログ</description></item><item><title>ViewBindingの使い方と旧手法からの移行</title><link>https://suihan74.github.io/posts/2020/11_29_00_view_binding/</link><pubDate>Sun, 29 Nov 2020 15:40:00 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/11_29_00_view_binding/</guid><description>Kotlinを1.4.20にアップデートしたら「'kotlin-android-extensions'は非推奨になったからよ、ViewBin</description></item><item><title>WebViewで画像リンクを長押ししたときにもリンク先URLを取得する方法</title><link>https://suihan74.github.io/posts/2020/10_26_00_webview_image_link_url/</link><pubDate>Mon, 26 Oct 2020 20:14:44 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/10_26_00_webview_image_link_url/</guid><description>前提 AndroidのWebViewでは、次のようにして表示しているページのリンク部分や画像を長押ししたときの処理を任意に設定できる。 webView.setOnLongClickListner { val hitTestResult</description></item><item><title>BindingAdapterが重複作成される警告</title><link>https://suihan74.github.io/posts/2020/10_19_00_binding_adapter_already_exists/</link><pubDate>Mon, 19 Oct 2020 14:48:13 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/10_19_00_binding_adapter_already_exists/</guid><description>参考 今回の内容は全部ここに書いてあることです。 Defining Android Binding Adapter in Kotlin | by Herman Cheung | Medium 問題 ビルドログを眺めているとこんな警告が大量に発生していた。 w: warning: Binding adapter AK(androidx.recyclerview.widget.RecyclerView,</description></item><item><title>タッチイベントの伝播を止める方法</title><link>https://suihan74.github.io/posts/2020/09_26_00_disallow_intercept_touch_event/</link><pubDate>Sat, 26 Sep 2020 23:03:54 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/09_26_00_disallow_intercept_touch_event/</guid><description>仮定する状況 たとえば、ドロワーの上に横方向のRecyclerViewを配置した場合、RecyclerViewの項目をスクロールしようとすると</description></item><item><title>コンストラクタ引数有りのViewModelを簡単に作成する</title><link>https://suihan74.github.io/posts/2020/09_14_01_provide_view_model/</link><pubDate>Mon, 14 Sep 2020 16:49:08 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/09_14_01_provide_view_model/</guid><description>補足 (2021-02-20) この記事の内容は Dagger + Hilt を使用したDI を行う場合は関係ない内容になっています。 DIライブラリを使用せずViewModelへのコンストラク</description></item><item><title>AlertDialogで項目選択後に勝手に閉じないようにする方法</title><link>https://suihan74.github.io/posts/2020/09_14_00_dismiss_dialog_explicitly/</link><pubDate>Mon, 14 Sep 2020 00:30:06 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/09_14_00_dismiss_dialog_explicitly/</guid><description>前提 次のようにして生成したダイアログでは、表示された項目をタップすると引数の関数を実行した後ダイアログは自動的に閉じる。 (勿論DialogF</description></item><item><title>kotlinx.serializationことはじめ</title><link>https://suihan74.github.io/posts/2020/08_06_01_kotlinx_serialization/</link><pubDate>Thu, 06 Aug 2020 21:40:00 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/08_06_01_kotlinx_serialization/</guid><description>この記事の情報 kotlinx.serialization 1.0.1について書かれています。 アップデートによって内容が古くなる可能性があります。 公式のドキュメントがかなりしっかり書い</description></item><item><title>lazyプロパティを持ったデータクラスをJson化する</title><link>https://suihan74.github.io/posts/2020/08_06_00_gson_with_lazy/</link><pubDate>Thu, 06 Aug 2020 14:50:03 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/08_06_00_gson_with_lazy/</guid><description>出ｗｗｗうっかりlazyデリゲートとGson併用してクラッシュ奴ｗ &amp;mdash; すいはん (@suihan742) August 5, 2020 たまに忘れてやってしまうやつ。 追記 (2020-08-06) -&amp;gt; Androidアプ</description></item><item><title>IntentChooserの項目をカスタムして強制的に表示させる一例</title><link>https://suihan74.github.io/posts/2020/05_03_00_customize_intent_chooser/</link><pubDate>Sun, 03 May 2020 14:11:01 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/05_03_00_customize_intent_chooser/</guid><description>前提 AndroidアプリではIntentを使用してアプリ間で情報をやりとりできる。 今回の記事では「URLを開く方法をユーザーに選ばせたい」と</description></item><item><title>SearchViewのカーソル色を指定する方法</title><link>https://suihan74.github.io/posts/2020/03_31_00_searchview_cursor/</link><pubDate>Tue, 31 Mar 2020 00:05:00 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/03_31_00_searchview_cursor/</guid><description>前提 res/menu/search.xml &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt; &amp;lt;menu xmlns:android=&amp;#34;http://schemas.android.com/apk/res/android&amp;#34; xmlns:app=&amp;#34;http://schemas.android.com/apk/res-auto&amp;#34;&amp;gt; &amp;lt;item android:id=&amp;#34;@+id/search_view&amp;#34; android:title=&amp;#34;search&amp;#34; app:showAsAction=&amp;#34;always&amp;#34; app:actionViewClass=&amp;#34;androidx.appcompat.widget.SearchView&amp;#34;/&amp;gt; &amp;lt;/menu&amp;gt; たとえばこんな感じでmenuアイテムのリソースを用意しているとする。 ここで使用しているSearchView上の</description></item><item><title>入力メソッドの表示に関するTIPS</title><link>https://suihan74.github.io/posts/2020/03_26_00_inputmethod/</link><pubDate>Thu, 26 Mar 2020 22:14:43 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/03_26_00_inputmethod/</guid><description>追記 (2020-08-03) Activity.hideSoftInputMethod()にフォーカス先のビューを渡せるようにした。 以前の単純にwindow.dec</description></item><item><title>BundleでEnumを扱うやつ</title><link>https://suihan74.github.io/posts/2020/03_13_00_bundle_enum/</link><pubDate>Fri, 13 Mar 2020 18:50:56 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/03_13_00_bundle_enum/</guid><description>やりたいこと Activity/FragmentのargumentsやらsavedInstanceStateやらはBundleクラスを使ってデ</description></item><item><title>updateLayoutParams&lt;T>使おうの巻</title><link>https://suihan74.github.io/posts/2020/03_08_00_update_layout_params/</link><pubDate>Sun, 08 Mar 2020 19:16:29 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/03_08_00_update_layout_params/</guid><description>概要 ViewのlayoutParamsの更新は再代入が必要なので、とくに何も考えずにこういう風に書いていた。 // ツールバーをコンテンツのスクロ</description></item><item><title>BindingAdapterに関するいくつかのこと</title><link>https://suihan74.github.io/posts/2020/03_07_00_binding_adapter/</link><pubDate>Sat, 07 Mar 2020 20:30:49 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/03_07_00_binding_adapter/</guid><description>追記 (2020-11-30) 双方向バインディングのやり方を書いてなかったので追記。 #双方向バインディング 拡張関数かオブジェクトかの選択 以下2通りの方法でバインディ</description></item><item><title>RecyclerViewロード時にスクロール位置を調整する</title><link>https://suihan74.github.io/posts/2020/02_22_00_fix_recyclerview_scroll_position/</link><pubDate>Sat, 22 Feb 2020 14:10:58 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/02_22_00_fix_recyclerview_scroll_position/</guid><description>追記 (2021-02-10) 表示内容のリスト(色々加工したあとアダプタにセットした状態のもの)をViewModelでキャッシュするか、 recyclerview:1</description></item><item><title>AndroidでQRコードを生成して画面に表示する</title><link>https://suihan74.github.io/posts/2020/02_20_00_generate_qrcode/</link><pubDate>Thu, 20 Feb 2020 01:48:21 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/02_20_00_generate_qrcode/</guid><description>AndroidアプリでQRコードを生成して画面に表示する方法。今回は読み取りについては書いていない。 追記 (2020-09-02) あまりにあんまりだったのでサンプル</description></item><item><title>Android - ListAdapter&lt;T, VH>をつかう</title><link>https://suihan74.github.io/posts/2020/02_17_00_list_adapter/</link><pubDate>Mon, 17 Feb 2020 18:52:19 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/02_17_00_list_adapter/</guid><description>以前の記事 で DiffUtil の使い方をメモして、非同期にやるやつ( AsyncListDiffer )についてはあまり触れていなかったのでそいつの使い方を書く。 ListAdapter&amp;lt;T, VH&amp;gt; なにそれ 内部で AsyncListDiffer を使っ</description></item><item><title>ダイアログ化したActivityの外側タップを検知する</title><link>https://suihan74.github.io/posts/2020/01_15_00_app_dialog_theme_click_outside/</link><pubDate>Wed, 15 Jan 2020 01:30:40 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/01_15_00_app_dialog_theme_click_outside/</guid><description>追記 (2020-01-17 01:30) 記述例のDialogActivityを表示するためにandroid:themeに設定する値がプロジェクト内で自分で用意したスタイルに</description></item><item><title>HideBottomViewOnScrollBehaviorの状態を外部から変更する</title><link>https://suihan74.github.io/posts/2020/01_11_00_hide_bottom_view_on_scroll_behavior/</link><pubDate>Sat, 11 Jan 2020 04:30:41 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/01_11_00_hide_bottom_view_on_scroll_behavior/</guid><description>関連記事 スクロールで画面上下端のツールバーやボタンを表示/非表示 前提 HideBottomViewOnScrollBehaviorを使用するこ</description></item><item><title>外部からprivateなsuspendメソッドを実行する方法</title><link>https://suihan74.github.io/posts/2020/01_09_00_reflection_invoke_suspend/</link><pubDate>Thu, 09 Jan 2020 17:08:19 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/01_09_00_reflection_invoke_suspend/</guid><description>プライベートメソッドのテストを書きたいときなどの方法。 Class.getDeclaredMethod(...)を使ってプライベートメソッドを</description></item><item><title>結果を返すActivityを呼ぶ</title><link>https://suihan74.github.io/posts/2020/01_07_00_start_activity_for_result/</link><pubDate>Tue, 07 Jan 2020 03:02:05 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/01_07_00_start_activity_for_result/</guid><description>Activityから戻ってくる際にその結果を受け取る必要がある場合のやりかた。 こういうネタ何書いても今さら感しかないわけだけど、しかし作って</description></item><item><title>LinkMovementMethodを設定したTextViewの文字列選択を解除するとクラッシュする</title><link>https://suihan74.github.io/posts/2020/01_06_01_selectable_textview/</link><pubDate>Mon, 06 Jan 2020 02:49:08 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/01_06_01_selectable_textview/</guid><description>問題 以下の条件のTextViewを用意する。 movementMethodにLinkMovementMethodを設定する。 android:t</description></item><item><title>タイトルテキストがMarqueeするToolbarを作る</title><link>https://suihan74.github.io/posts/2020/01_06_00_marquee_toolbar/</link><pubDate>Mon, 06 Jan 2020 00:18:01 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/01_06_00_marquee_toolbar/</guid><description>やりたいこと こういうの。 ツールバーのtitle部分の文字列が横に流れ続けている。 カスタムビューの作成 Toolbarを継承した次のようなカスタ</description></item><item><title>スクロールで画面上下端のツールバーやボタンを表示/非表示</title><link>https://suihan74.github.io/posts/2020/01_02_02_show_views_with_scrolling/</link><pubDate>Fri, 03 Jan 2020 00:12:34 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/01_02_02_show_views_with_scrolling/</guid><description>やること こういうやつ。 画面中央のRecyclerViewのスクロールに合わせて、画面上端のToolbarが上に向かって隠れ、画面下端のFlo</description></item><item><title>Android - DataBindingはじめ</title><link>https://suihan74.github.io/posts/2020/01_02_00_beginning_of_data_binding/</link><pubDate>Thu, 02 Jan 2020 17:04:24 +0900</pubDate><guid>https://suihan74.github.io/posts/2020/01_02_00_beginning_of_data_binding/</guid><description>追記 (2020-07-21) （先月頭だかのAndroidStudio4.0アップデートで起きた話なので、割と今さら感あるが） データバインディングを使用したいときに</description></item><item><title>OnBackPressedDispatcherのコールバック追加タイミングに関するTips</title><link>https://suihan74.github.io/posts/2019/12_23_00_on_back_pressed_dispatcher/</link><pubDate>Mon, 23 Dec 2019 01:18:10 +0900</pubDate><guid>https://suihan74.github.io/posts/2019/12_23_00_on_back_pressed_dispatcher/</guid><description>おさらい Fragmentの戻るボタン処理についてのお話。 AppCompatActivity.onBackPressed()をオーバーライドし</description></item><item><title>Fragment内のスクロールでActivityのToolbarが動くのを回避する</title><link>https://suihan74.github.io/posts/2019/12_22_00/</link><pubDate>Sun, 22 Dec 2019 03:57:59 +0900</pubDate><guid>https://suihan74.github.io/posts/2019/12_22_00/</guid><description>問題があったレイアウト例 &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt; &amp;lt;androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=&amp;#34;http://schemas.android.com/apk/res/android&amp;#34; xmlns:app=&amp;#34;http://schemas.android.com/apk/res-auto&amp;#34; android:layout_width=&amp;#34;match_parent&amp;#34; android:layout_height=&amp;#34;match_parent&amp;#34;&amp;gt; &amp;lt;com.google.android.material.appbar.AppBarLayout android:id=&amp;#34;@+id/appbar_layout&amp;#34; app:elevation=&amp;#34;0dp&amp;#34; android:layout_width=&amp;#34;match_parent&amp;#34; android:layout_height=&amp;#34;wrap_content&amp;#34;&amp;gt; &amp;lt;androidx.appcompat.widget.Toolbar android:id=&amp;#34;@+id/toolbar&amp;#34; app:layout_scrollFlags=&amp;#34;enterAlways|scroll&amp;#34; android:layout_width=&amp;#34;match_parent&amp;#34; android:layout_height=&amp;#34;match_parent&amp;#34;/&amp;gt; &amp;lt;/com.google.android.material.appbar.AppBarLayout&amp;gt; &amp;lt;!-- メインコンテンツを表示するための領域 --&amp;gt; &amp;lt;FrameLayout android:id=&amp;#34;@+id/main_contents_layout&amp;#34; app:layout_behavior=&amp;#34;com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior&amp;#34; android:layout_width=&amp;#34;match_parent&amp;#34; android:layout_height=&amp;#34;match_parent&amp;#34;/&amp;gt; &amp;lt;!-- メインコンテンツのアイテム</description></item><item><title>戻るボタンを監視するナウいやつ</title><link>https://suihan74.github.io/posts/2019/12_20_00/</link><pubDate>Fri, 20 Dec 2019 03:43:29 +0900</pubDate><guid>https://suihan74.github.io/posts/2019/12_20_00/</guid><description>2019/12/23 追記 OnBackPressedDispatcher.addCallback()を呼ぶタイミングに関する問題があったのでコード例を修正。 問題</description></item><item><title>Androidアプリ開発Tips – DiffUtilでリスト差分更新</title><link>https://suihan74.github.io/posts/2019/12_16_01_android_diff_util/</link><pubDate>Mon, 16 Dec 2019 22:21:00 +0900</pubDate><guid>https://suihan74.github.io/posts/2019/12_16_01_android_diff_util/</guid><description>おことわり この記事は旧ブログから引っ張ってきたものの再掲です。 追記 DiffUtil をそのまま使うと、アイテム数が膨大になったときUIスレッドを止めてしまう</description></item><item><title>Androidアプリ開発Tips – dbファイルをぶっこ抜く→読み込む</title><link>https://suihan74.github.io/posts/2019/12_16_00_android_copy_room_db/</link><pubDate>Mon, 16 Dec 2019 20:08:00 +0900</pubDate><guid>https://suihan74.github.io/posts/2019/12_16_00_android_copy_room_db/</guid><description>おことわり この記事は旧ブログから引っ張ってきたものの再掲です。 当時の内容 そういうことしていいのだろうか……というのはともかく、Roomを使っ</description></item><item><title>Androidアプリ開発Tips – アプリバーをコード側で明示的に表示/非表示</title><link>https://suihan74.github.io/posts/2019/11_20_01_appbar_set_expanded/</link><pubDate>Wed, 20 Nov 2019 02:41:00 +0900</pubDate><guid>https://suihan74.github.io/posts/2019/11_20_01_appbar_set_expanded/</guid><description>おことわり この記事は旧ブログから引っ張ってきたものの再掲です。 コンテンツスクロールにあわせてAppBarLayoutの表示状態を変える App</description></item><item><title>Androidアプリ開発Tips – Drawer展開時にIMEを閉じる</title><link>https://suihan74.github.io/posts/2019/11_20_00_android_close_ime_by_opening_drawer/</link><pubDate>Wed, 20 Nov 2019 01:42:00 +0900</pubDate><guid>https://suihan74.github.io/posts/2019/11_20_00_android_close_ime_by_opening_drawer/</guid><description>おことわり この記事は旧ブログから引っ張ってきたものの再掲です。 当時の内容 EditTextとかSearchViewとかにフォーカスが当たってい</description></item></channel></rss>